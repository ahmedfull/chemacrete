  const formatCartForSharing = () => {
    let cartText = "ðŸ›’ My Shopping Cart:\n\n";
    
    cart.forEach((item, index) => {
      cartText += `${index + 1}. ${item.name} (Qty: ${item.quantity})\n`;
      cartText += `   Price: $${item.price?.toFixed(2)} each\n`;
      cartText += `   Subtotal: $${(item.price * item.quantity).toFixed(2)}\n\n`;
    });
    
    cartText += `\nðŸ’³ TOTAL: $${cartTotal.toFixed(2)}`;
    
    return cartText;
  };

  const shareViaEmail = () => {
    const subject = "My Shopping Cart";
    const body = formatCartForSharing();
    const mailtoLink = `mailto:amhboom14@gmail.com?subject=${encodeURIComponent(subject)}&body=${encodeURIComponent(body)}`;
    
    window.location.href = mailtoLink;
    setShareStatus('Email client opened!');
    setTimeout(() => setShareStatus(''), 3000);
  };

  const shareViaDiscord = () => {
    const cartText = formatCartForSharing();
    const webhookURL = "https://discord.com/api/webhooks/your_webhook_id/your_webhook_token";
    
    fetch(webhookURL, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        content: `New cart shared:\n\`\`\`${cartText}\`\`\``
      }),
    })
    .then(response => {
      if (response.ok) {
        setShareStatus('Cart shared to Discord!');
      } else {
        setShareStatus('Failed to share to Discord');
      }
    })
    .catch(() => {
      setShareStatus('Error sharing to Discord');
    })
    .finally(() => {
      setTimeout(() => setShareStatus(''), 3000);
    });
  };

  const shareViaMessenger = () => {
    const cartText = formatCartForSharing();
    const encodedText = encodeURIComponent(cartText);
    
    // Open messenger with the cart text
    window.open(`https://www.facebook.com/dialog/send?app_id=your_app_id&link=${window.location.href}&redirect_uri=${window.location.href}&quote=${encodedText}`, '_blank', 'width=600,height=400');
    
    setShareStatus('Messenger share window opened!');
    setTimeout(() => setShareStatus(''), 3000);
  };

  const copyToClipboard = () => {
    const cartText = formatCartForSharing();
    navigator.clipboard.writeText(cartText)
      .then(() => {
        setShareStatus('Cart copied to clipboard!');
        setTimeout(() => setShareStatus(''), 3000);
      })
      .catch(() => {
        setShareStatus('Failed to copy to clipboard');
        setTimeout(() => setShareStatus(''), 3000);
      });
  };





  -------------------------------------------------------------------------------------


  
                    <button 
                      onClick={() => setShowShareOptions(true)}
                      disabled={updating}
                      className="action-button email-button"
                    >
                      Share Cart
                    </button>
                  </div>
                </div>
              </div>
            </div>
          </>
        )}
      </div>

      {showShareOptions && (
        <div className="share-modal">
          <div className="share-modal-content">
            <button className="close-button" onClick={() => setShowShareOptions(false)}>
              &times;
            </button>
            
            <h3>Share Your Cart</h3>
            <p className="share-description">Select how you'd like to share your cart:</p>
            
            <div className="share-options">
              <button className="share-option" onClick={shareViaEmail}>
                <div className="share-icon email-icon">
                  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
                  </svg>
                </div>
                <span>Email</span>
              </button>
              
              <button className="share-option" onClick={shareViaDiscord}>
                <div className="share-icon discord-icon">
                  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
                    <path d="M19.27 5.33C17.94 4.71 16.5 4.26 15 4a.09.09 0 0 0-.07.03c-.18.33-.39.76-.53 1.09a16.09 16.09 0 0 0-4.8 0c-.14-.34-.35-.76-.54-1.09c-.01-.02-.04-.03-.07-.03c-1.5.26-2.93.71-4.27 1.33c-.01 0-.02.01-.03.02c-2.72 4.07-3.47 8.03-3.1 11.95c0 .02.01.04.03.05c1.8 1.32 3.53 2.12 5.24 2.65c.03.01.06 0 .07-.02c.4-.55.76-1.13 1.07-1.74c.02-.04 0-.08-.04-.09c-.57-.22-1.11-.48-1.64-.78c-.04-.02-.04-.08-.01-.11c.11-.08.22-.17.33-.25c.02-.02.05-.02.07-.01c3.44 1.57 7.15 1.57 10.55 0c.02-.01.05-.01.07.01c.11.09.22.17.33.26c.04.03.04.09-.01.11c-.52.31-1.07.56-1.64.78c-.04.01-.05.06-.04.09c.32.61.68 1.19 1.07 1.74c.03.01.06.02.09.01c1.72-.53 3.45-1.33 5.25-2.65c.02-.01.03-.03.03-.05c.44-4.53-.73-8.46-3.1-11.95c-.01-.01-.02-.02-.04-.02zM8.52 14.91c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12c0 1.17-.84 2.12-1.89 2.12zm6.97 0c-1.03 0-1.89-.95-1.89-2.12s.84-2.12 1.89-2.12c1.06 0 1.9.96 1.89 2.12c0 1.17-.83 2.12-1.89 2.12z"/>
                  </svg>
                </div>
                <span>Discord</span>
              </button>
              
              <button className="share-option" onClick={shareViaMessenger}>
                <div className="share-icon messenger-icon">
                  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
                    <path d="M12 2C6.36 2 2 6.13 2 11.7c0 2.91 1.19 5.44 3.14 7.17.16.13.26.35.27.57l.05 1.78c.04.57.61.94 1.13.71l1.98-.87c.17-.06.36-.09.53-.06.9.27 1.9.4 2.9.4 5.64 0 10-4.13 10-9.7S17.64 2 12 2zm6 7.46l-2.93 4.67c-.47.75-1.47 1-2.24.53l-2.16-1.32c-.24-.15-.57-.15-.81 0l-3.16 2.4c-.28.2-.69-.12-.55-.46L6 9.53c.2-.7.98-1.09 1.68-.83l2.88 1.11c.9.35 1.93-.06 2.35-.86l2.99-4.89c.21-.37.73-.37.93 0l1.77 3.4z"/>
                  </svg>
                </div>
                <span>Messenger</span>
              </button>
              
              <button className="share-option" onClick={copyToClipboard}>
                <div className="share-icon clipboard-icon">
                  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M8 5H6a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2v-1M8 5a2 2 0 002 2h2a2 2 0 002-2M8 5a2 2 0 012-2h2a2 2 0 012 2m0 0h2a2 2 0 012 2v3m2 4H10m0 0l3-3m-3 3l3 3" />
                  </svg>
                </div>
                <span>Copy</span>
              </button>
            </div>
            
            {shareStatus && <div className="share-status">{shareStatus}</div>}
          </div>
        </div>
      );
      }